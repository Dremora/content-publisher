<% content_for :title, t("documents.index.title") %>

<%= render "govuk_publishing_components/components/button", {
  text: "New document", href: new_document_path, margin_bottom: true
} %>

<div class="govuk-grid-row">
  <div class="govuk-grid-column-one-third">
    <%= form_tag({}, method: :get) do %>
      <%= render "govuk_publishing_components/components/input", {
        label: {
          text: t("documents.index.filter.title_or_url")
        },
        name: "title_or_url",
        value: params[:title_or_url]
      } %>

      <%= render "govuk_publishing_components/components/label", {
        text: t("documents.index.filter.document_type"),
        html_for: "document_type"
      } %>

      <% document_type_select = SupertypeSchema.all.inject([]) do |memo, supertype|
          document_options = supertype
            .document_types
            .reject { |d| d.managed_elsewhere }
            .map { |d| [d.label, d.id] }

          memo << [supertype.label, document_options] if document_options.any?
          memo
        end
      %>

      <%= select_tag "document_type",
        grouped_options_for_select(document_type_select, params[:document_type]),
        class: "govuk-select",
        include_blank: true
      %>

      <%= render "govuk_publishing_components/components/label", {
        text: t("documents.index.filter.state"),
        html_for: "state"
      } %>

      <% state_fields = UserFacingState::STATES.map { |state| [t("user_facing_states.#{state}.name"), state] } %>

      <%= select_tag "state",
        options_for_select(state_fields, params[:state]),
        class: "govuk-select",
        include_blank: true
      %>

      <%= hidden_field_tag "sort", @sort %>

      <%= render "govuk_publishing_components/components/button", {
        text: "Filter", margin_bottom: true
      } %>

      <%= link_to "Clear filter", documents_path %>
    <% end %>
  </div>

  <div class="govuk-grid-column-two-thirds">
    <%= t("documents.index.search_results.summary_html", count: @documents.total_count) %>

    <% if @documents.none? %>
      <%= govspeak_to_html t("documents.index.search_results.guidance") %>
    <% else %>
      <table class="govuk-table">
        <thead class="govuk-table__head">
          <tr class="govuk-table__row">
            <th class="govuk-table__header" scope="col">
              <%= t("documents.index.search_results.headings.title") %>
            </th>

            <th class="govuk-table__header" scope="col">
              <%
                active = @sort.delete_prefix("-") == "updated_at"
                link_to_asc = active && @sort[0] == "-"
                classes = []
                classes << "active" if active
                classes << "desc" if active && link_to_asc
              %>
              <%= link_to(
                t("documents.index.search_results.headings.last_updated"),
                documents_path(@filter_params.merge(sort: "#{link_to_asc ? '' : '-'}updated_at", page: nil)),
                title: t("documents.index.search_results.headings.last_updated_#{link_to_asc ? 'asc' : 'desc'}"),
                class: classes
              ) %>
            </th>
          </tr>
        </thead>
        <tbody class="govuk-table__body">
          <% @documents.map do |document| %>
            <tr class="govuk-table__row document">
              <th class="govuk-table__header" scope="row">
                <%= link_to document.title, document %>
              </th>

              <td class="govuk-table__cell ">
                <%= document.updated_at.strftime("%d %b %Y") %>
              </td>
            </tr>
          <% end %>
        </tbody>
      </table>
    <% end %>

    <% pages = { } %>

    <% page_info = t("documents.index.search_results.page_info",
                     page: @documents.current_page,
                     pages: @documents.total_pages) %>

    <% pages[:previous_page] = { url: documents_path(@filter_params.merge(page: @documents.prev_page)),
                                 label: page_info,
                                 title: "Previous page" } if @documents.prev_page %>

    <% pages[:next_page] = { url: documents_path(@filter_params.merge(page: @documents.next_page)),
                             label: page_info,
                             title: "Next page" } if @documents.next_page %>

    <%= render "govuk_publishing_components/components/previous_and_next_navigation", pages %>
  </div>
</div>
